 @inject IJSRuntime JSRuntime
 @implements IAsyncDisposable


@code {
    private Task<IJSObjectReference>? _boostrapModule;


    private Task<IJSObjectReference> BootstrapModule =>
    _boostrapModule ??= JSRuntime.InvokeAsync<IJSObjectReference>("import", "/bootstrap/js/bootstrap.bundle.min.js").AsTask();

    // Render JS in Blazor Server using OnAfterRenderAsync Method.
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            var booststrapModule = await BootstrapModule;
        }
        catch { }
    }

    public async ValueTask DisposeAsync()
    {
        if ( _boostrapModule != null)
        {
            var booststrapModule = await BootstrapModule;

            await booststrapModule.DisposeAsync();
        }
    }
}
